kind: pipeline
type: docker
name: autotag

clone:
    disable: true

trigger:
    branch:
        - main
    event:
        - push

steps:
    - name: clone
      image: alpine/git
      environment:
          GITHUB_TOKEN:
              from_secret: github_token
          GITHUB_USER:
              from_secret: github_user
      commands:
          - echo machine github.com login $GITHUB_USER password $GITHUB_TOKEN > ~/.netrc
          - git clone $DRONE_GIT_HTTP_URL .
          - git checkout main
          - git pull origin main

    - name: Sync Workspace
      image: golang:1.19
      environment:
          GITHUB_TOKEN:
              from_secret: github_token
          GITHUB_USER:
              from_secret: github_user
      commands:
          - echo machine github.com login $GITHUB_USER password $GITHUB_TOKEN > ~/.netrc
          - bash ./scripts/autotag.sh

---
kind: pipeline
type: docker
name: badge

depends_on:
    - autotag

trigger:
    branch:
        - main
    event:
        - push

steps:
    - name: Restore Cache
      image: plugins/s3-cache
      failure: ignore
      settings:
          pull: true
          restore: true
          root:
              from_secret: S3_DRONE_BUCKET_NAME
          endpoint:
              from_secret: S3_DRONE_ENDPOINT
          access_key:
              from_secret: S3_DRONE_ACCESS_KEY
          secret_key:
              from_secret: S3_DRONE_SECRET_KEY
          mount:
              - build/
              - bin/
              - dist/

    - name: Build Badges
      image: golang:1.19
      failure: ignore
      environment:
          GOPATH: /build
          GOBIN: /build/bin
          GOCACHE: /build/cache
          GOSUMDB: off
          ENDPOINT:
              from_secret: S3_DRONE_ENDPOINT
          ACCESS_KEY:
              from_secret: S3_DRONE_ACCESS_KEY
          SECRET_KEY:
              from_secret: S3_DRONE_SECRET_KEY
      commands:
          - apt update && apt install bc -y
          - mv -f build / || true
          - make mc-binary
          - bash ./scripts/badges.sh
          - ./bin/mc alias set drone-ci $ENDPOINT $ACCESS_KEY $SECRET_KEY
          - ./bin/mc mirror --overwrite --remove ./dist drone-ci/badges/tower
          - mv -f /build . || true
      depends_on:
          - Restore Cache

    - name: Save Cache
      image: plugins/s3-cache
      failure: ignore
      when:
          status: [success, failure]
      settings:
          rebuild: true
          root:
              from_secret: S3_DRONE_BUCKET_NAME
          endpoint:
              from_secret: S3_DRONE_ENDPOINT
          access_key:
              from_secret: S3_DRONE_ACCESS_KEY
          secret_key:
              from_secret: S3_DRONE_SECRET_KEY
          mount:
              - build/
              - bin/
              - dist/
      depends_on:
          - Build Badges

---
kind: pipeline
type: docker
name: test
load: '1' # to stfu goland.

services:
    - name: docker
      image: docker:20.10.22-dind
      privileged: true
      volumes:
          - name: docker_sock
            path: /var/run/docker.sock

trigger:
    event:
        - pull_request

volumes:
    - name: docker_sock
      host:
          path: /var/run/docker.sock

steps:
    - name: Restore Cache
      image: plugins/s3-cache
      failure: ignore
      settings:
          pull: true
          restore: true
          root:
              from_secret: S3_DRONE_BUCKET_NAME
          endpoint:
              from_secret: S3_DRONE_ENDPOINT
          access_key:
              from_secret: S3_DRONE_ACCESS_KEY
          secret_key:
              from_secret: S3_DRONE_SECRET_KEY
          mount:
              - build/
              - dist/

    - name: Test
      image: golang:1.19
      environment:
          GOPATH: /build
          GOBIN: /build/bin
          GOCACHE: /build/cache
          GOSUMDB: off
          DOCKER_HOST: tcp://docker:2375
          DOCKER_TEST_HOST: docker
      commands:
          - apt update && apt install docker -y
          - mv -f build / || true
          - (make test-ci)
          - mv -f /build . || true

    - name: Save Cache
      image: plugins/s3-cache
      failure: ignore
      when:
          status: [success]
      settings:
          rebuild: true
          root:
              from_secret: S3_DRONE_BUCKET_NAME
          endpoint:
              from_secret: S3_DRONE_ENDPOINT
          access_key:
              from_secret: S3_DRONE_ACCESS_KEY
          secret_key:
              from_secret: S3_DRONE_SECRET_KEY
          mount:
              - build/

    - name: Flush Cache
      image: plugins/s3-cache
      failure: ignore
      when:
          status: [success]
      settings:
          flush: true
          root:
              from_secret: S3_DRONE_BUCKET_NAME
          endpoint:
              from_secret: S3_DRONE_ENDPOINT
          access_key:
              from_secret: S3_DRONE_ACCESS_KEY
          secret_key:
              from_secret: S3_DRONE_SECRET_KEY
          mount:
              - build/

    - name: Discord Notification - Success
      image: appleboy/drone-discord
      failure: ignore
      when:
          status: [success]
      settings:
          username: Tower - Test Passed
          webhook_id:
              from_secret: discord_webhook_id
          webhook_token:
              from_secret: discord_webhook_token

    - name: Discord Notification - Failure
      image: appleboy/drone-discord
      failure: ignore
      when:
          status: [failure]
      settings:
          username: Tower - Test Failed
          webhook_id:
              from_secret: discord_webhook_id
          webhook_token:
              from_secret: discord_webhook_token
