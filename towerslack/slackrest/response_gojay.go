// Code generated by Gojay. DO NOT EDIT.

package slackrest

import (
	"sync"

	"github.com/francoispqt/gojay"
)

func init() {
	ErrorResponsePool = &sync.Pool{
		New: func() interface{} {
			return &ErrorResponse{}
		},
	}
}

var ErrorResponsePool *sync.Pool

// MarshalJSONObject implements MarshalerJSONObject
func (r *ErrorResponse) MarshalJSONObject(enc *gojay.Encoder) {
	enc.BoolKey("ok", r.Ok)
	enc.StringKey("error", r.Err)
}

// IsNil checks if instance is nil
func (r *ErrorResponse) IsNil() bool {
	return r == nil
}

// UnmarshalJSONObject implements gojay's UnmarshalerJSONObject
func (r *ErrorResponse) UnmarshalJSONObject(dec *gojay.Decoder, k string) error {
	switch k {
	case "ok":
		return dec.Bool(&r.Ok)

	case "error":
		return dec.String(&r.Err)

	}
	return nil
}

// NKeys returns the number of keys to unmarshal
func (r *ErrorResponse) NKeys() int { return 2 }

// Reset reset fields
func (r *ErrorResponse) Reset() {
	r.Ok = false
	r.Err = ""
}
