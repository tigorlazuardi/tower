kind: pipeline
type: docker
name: test-code

steps:
  - name: restore-cache
    image: plugins/s3-cache
    settings:
      pull: true
      restore: true
      root:
        from_secret: S3_DRONE_BUCKET_NAME
      endpoint:
        from_secret: S3_DRONE_ENDPOINT
      access_key:
        from_secret: S3_DRONE_ACCESS_KEY
      secret_key:
        from_secret: S3_DRONE_SECRET_KEY
      mount:
        - build/

  - name: test
    image: golang:latest
    environment:
      GOPATH: /build
      GOBIN: /build/bin
      GOCACHE: /build/cache
    commands:
      - mv build / || true
      - (make test-ci)
      - export TEST_EXIT_CODE=$?
      - mv /build . || true
      - exit $TEST_EXIT_CODE

  - name: save-cache
    image: plugins/s3-cache
    when:
      status: [ success, failure ]
    settings:
      rebuild: true
      root:
        from_secret: S3_DRONE_BUCKET_NAME
      endpoint:
        from_secret: S3_DRONE_ENDPOINT
      access_key:
        from_secret: S3_DRONE_ACCESS_KEY
      secret_key:
        from_secret: S3_DRONE_SECRET_KEY
      mount:
        - build/

  - name: flush-old-cache
    image: plugins/s3-cache
    when:
      status: [ success, failure ]
    settings:
      flush: true
      flush_age: 7
      root:
        from_secret: S3_DRONE_BUCKET_NAME
      endpoint:
        from_secret: S3_DRONE_ENDPOINT
      access_key:
        from_secret: S3_DRONE_ACCESS_KEY
      secret_key:
        from_secret: S3_DRONE_SECRET_KEY
      mount:
        - build/

  - name: report-discord
    image: plugins/discord
    when:
      status: [ success, failure ]
    settings:
      webhook_id:
        from_secret: DISCORD_WEBHOOK_ID
      webhook_token:
        from_secret: DISCORD_WEBHOOK_TOKEN